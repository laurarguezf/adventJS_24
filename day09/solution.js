/* 

Los elfos est치n jugando con un tren 游뚝 m치gico que transporta regalos. 
Este tren se mueve en un tablero representado por un array de strings.

El tren est치 compuesto por una locomotora (@), seguida de sus vagones (o), 
y debe recoger frutas m치gicas (*) que le sirve de combustible. El movimiento 
del tren sigue las siguientes reglas:

Recibir치s dos par치metros board y mov.

board es un array de strings que representa el tablero:

- @ es la locomotora del tren.
- o son los vagones del tren.
- * es una fruta m치gica.
- 췅 son espacios vac칤os.

mov es un string que indica el pr칩ximo movimiento del tren desde la cabeza del 
tren @:

- 'L': izquierda
- 'R': derecha
- 'U': arriba
- 'D': abajo.

Con esta informaci칩n, debes devolver una cadena de texto:

- 'crash': Si el tren choca contra los bordes del tablero o contra s칤 mismo.
- 'eat': Si el tren recoge una fruta m치gica (*).
- 'none': Si avanza sin chocar ni recoger ninguna fruta m치gica.

*/

function moveTrain(board, mov) {

  //Buscamos la posici칩n de la locomotora @
  let headRow, headCol;

  for (let row = 0; row < board.length; row++) {
    const col = board[row].indexOf('@');
    if (col !== -1) {
      headRow = row;
      headCol = col;
      break;
    }
  }

  //C치lculo de la nueva posici칩n seg칰n el tipo de movimiento
  let newCol = headCol;
  let newRow = headRow;

  if (mov === 'L') {
    newCol--;
  } else if (mov === 'R') {
    newCol++
  } else if (mov === 'U') {
    newRow--
  } else if (mov == 'D') {
    newRow++
  };

  //Verificaci칩n de que el movimiento es v치lido
  if (newRow < 0 || newRow >= board.length || newCol < 0 || newCol >= board[0].length) {
    return 'crash';
  } 

  //Verificamos si la nueva posici칩n es v치lida o se choca contra un vag칩n
  const newCell = board[newRow][newCol];

  if (newCell === 'o') {
    return 'crash'
  } else if (newCell === '*') {
    return 'eat'
  } else if (newCell === '췅') {
    return 'none';
  }
}

module.exports = moveTrain;